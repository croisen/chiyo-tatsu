/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: backup_source.proto */

#ifndef PROTOBUF_C_backup_5fsource_2eproto__INCLUDED
#define PROTOBUF_C_backup_5fsource_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct BrokenBackupSource BrokenBackupSource;
typedef struct BackupSource BackupSource;


/* --- enums --- */


/* --- messages --- */

struct  BrokenBackupSource
{
  ProtobufCMessage base;
  char *name;
  int64_t sourceid;
};
#define BROKEN_BACKUP_SOURCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&broken_backup_source__descriptor) \
, (char *)protobuf_c_empty_string, 0 }


struct  BackupSource
{
  ProtobufCMessage base;
  char *name;
  int64_t sourceid;
};
#define BACKUP_SOURCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&backup_source__descriptor) \
, (char *)protobuf_c_empty_string, 0 }


/* BrokenBackupSource methods */
void   broken_backup_source__init
                     (BrokenBackupSource         *message);
size_t broken_backup_source__get_packed_size
                     (const BrokenBackupSource   *message);
size_t broken_backup_source__pack
                     (const BrokenBackupSource   *message,
                      uint8_t             *out);
size_t broken_backup_source__pack_to_buffer
                     (const BrokenBackupSource   *message,
                      ProtobufCBuffer     *buffer);
BrokenBackupSource *
       broken_backup_source__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   broken_backup_source__free_unpacked
                     (BrokenBackupSource *message,
                      ProtobufCAllocator *allocator);
/* BackupSource methods */
void   backup_source__init
                     (BackupSource         *message);
size_t backup_source__get_packed_size
                     (const BackupSource   *message);
size_t backup_source__pack
                     (const BackupSource   *message,
                      uint8_t             *out);
size_t backup_source__pack_to_buffer
                     (const BackupSource   *message,
                      ProtobufCBuffer     *buffer);
BackupSource *
       backup_source__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   backup_source__free_unpacked
                     (BackupSource *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*BrokenBackupSource_Closure)
                 (const BrokenBackupSource *message,
                  void *closure_data);
typedef void (*BackupSource_Closure)
                 (const BackupSource *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor broken_backup_source__descriptor;
extern const ProtobufCMessageDescriptor backup_source__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_backup_5fsource_2eproto__INCLUDED */
