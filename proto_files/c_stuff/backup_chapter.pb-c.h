/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: backup_chapter.proto */

#ifndef PROTOBUF_C_backup_5fchapter_2eproto__INCLUDED
#define PROTOBUF_C_backup_5fchapter_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct BackupChapter BackupChapter;


/* --- enums --- */


/* --- messages --- */

struct  BackupChapter
{
  ProtobufCMessage base;
  char *url;
  char *name;
  char *scanlator;
  protobuf_c_boolean read;
  protobuf_c_boolean bookmark;
  int64_t lastpageread;
  int64_t datefetch;
  int64_t dateupload;
  float chapternumber;
  int64_t sourceorder;
};
#define BACKUP_CHAPTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&backup_chapter__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, 0, 0, 0, 0, 0 }


/* BackupChapter methods */
void   backup_chapter__init
                     (BackupChapter         *message);
size_t backup_chapter__get_packed_size
                     (const BackupChapter   *message);
size_t backup_chapter__pack
                     (const BackupChapter   *message,
                      uint8_t             *out);
size_t backup_chapter__pack_to_buffer
                     (const BackupChapter   *message,
                      ProtobufCBuffer     *buffer);
BackupChapter *
       backup_chapter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   backup_chapter__free_unpacked
                     (BackupChapter *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*BackupChapter_Closure)
                 (const BackupChapter *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor backup_chapter__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_backup_5fchapter_2eproto__INCLUDED */
