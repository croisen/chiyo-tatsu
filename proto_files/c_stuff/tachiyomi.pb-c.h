/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: tachiyomi.proto */

#ifndef PROTOBUF_C_tachiyomi_2eproto__INCLUDED
#define PROTOBUF_C_tachiyomi_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "backup_category.pb-c.h"
#include "backup_manga.pb-c.h"
#include "backup_preference.pb-c.h"
#include "backup_source.pb-c.h"

typedef struct Backup Backup;


/* --- enums --- */


/* --- messages --- */

struct  Backup
{
  ProtobufCMessage base;
  size_t n_mangabackup;
  BackupManga **mangabackup;
  size_t n_categories;
  BackupCategory **categories;
  size_t n_brokensources;
  BrokenBackupSource **brokensources;
  size_t n_sources;
  BackupSource **sources;
  size_t n_preferences;
  BackupPreference **preferences;
  size_t n_sourcepreferences;
  BackupSourcePreferences **sourcepreferences;
};
#define BACKUP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&backup__descriptor) \
, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


/* Backup methods */
void   backup__init
                     (Backup         *message);
size_t backup__get_packed_size
                     (const Backup   *message);
size_t backup__pack
                     (const Backup   *message,
                      uint8_t             *out);
size_t backup__pack_to_buffer
                     (const Backup   *message,
                      ProtobufCBuffer     *buffer);
Backup *
       backup__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   backup__free_unpacked
                     (Backup *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Backup_Closure)
                 (const Backup *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor backup__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_tachiyomi_2eproto__INCLUDED */
