// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: backup_preference.proto
// Protobuf C++ Version: 4.25.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_backup_5fpreference_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_backup_5fpreference_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_backup_5fpreference_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_backup_5fpreference_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_backup_5fpreference_2eproto;
class BackupPreference;
struct BackupPreferenceDefaultTypeInternal;
extern BackupPreferenceDefaultTypeInternal _BackupPreference_default_instance_;
class BackupSourcePreferences;
struct BackupSourcePreferencesDefaultTypeInternal;
extern BackupSourcePreferencesDefaultTypeInternal _BackupSourcePreferences_default_instance_;
class BooleanPreferenceValue;
struct BooleanPreferenceValueDefaultTypeInternal;
extern BooleanPreferenceValueDefaultTypeInternal _BooleanPreferenceValue_default_instance_;
class FloatPreferenceValue;
struct FloatPreferenceValueDefaultTypeInternal;
extern FloatPreferenceValueDefaultTypeInternal _FloatPreferenceValue_default_instance_;
class IntPreferenceValue;
struct IntPreferenceValueDefaultTypeInternal;
extern IntPreferenceValueDefaultTypeInternal _IntPreferenceValue_default_instance_;
class LongPreferenceValue;
struct LongPreferenceValueDefaultTypeInternal;
extern LongPreferenceValueDefaultTypeInternal _LongPreferenceValue_default_instance_;
class PreferenceValue;
struct PreferenceValueDefaultTypeInternal;
extern PreferenceValueDefaultTypeInternal _PreferenceValue_default_instance_;
class StringPreferenceValue;
struct StringPreferenceValueDefaultTypeInternal;
extern StringPreferenceValueDefaultTypeInternal _StringPreferenceValue_default_instance_;
class StringSetPreferenceValue;
struct StringSetPreferenceValueDefaultTypeInternal;
extern StringSetPreferenceValueDefaultTypeInternal _StringSetPreferenceValue_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class StringSetPreferenceValue final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StringSetPreferenceValue) */ {
 public:
  inline StringSetPreferenceValue() : StringSetPreferenceValue(nullptr) {}
  ~StringSetPreferenceValue() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StringSetPreferenceValue(::google::protobuf::internal::ConstantInitialized);

  inline StringSetPreferenceValue(const StringSetPreferenceValue& from)
      : StringSetPreferenceValue(nullptr, from) {}
  StringSetPreferenceValue(StringSetPreferenceValue&& from) noexcept
    : StringSetPreferenceValue() {
    *this = ::std::move(from);
  }

  inline StringSetPreferenceValue& operator=(const StringSetPreferenceValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline StringSetPreferenceValue& operator=(StringSetPreferenceValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StringSetPreferenceValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const StringSetPreferenceValue* internal_default_instance() {
    return reinterpret_cast<const StringSetPreferenceValue*>(
               &_StringSetPreferenceValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(StringSetPreferenceValue& a, StringSetPreferenceValue& b) {
    a.Swap(&b);
  }
  inline void Swap(StringSetPreferenceValue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StringSetPreferenceValue* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StringSetPreferenceValue* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StringSetPreferenceValue>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StringSetPreferenceValue& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StringSetPreferenceValue& from) {
    StringSetPreferenceValue::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StringSetPreferenceValue* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "StringSetPreferenceValue";
  }
  protected:
  explicit StringSetPreferenceValue(::google::protobuf::Arena* arena);
  StringSetPreferenceValue(::google::protobuf::Arena* arena, const StringSetPreferenceValue& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // repeated string value = 1;
  int value_size() const;
  private:
  int _internal_value_size() const;

  public:
  void clear_value() ;
  const std::string& value(int index) const;
  std::string* mutable_value(int index);
  void set_value(int index, const std::string& value);
  void set_value(int index, std::string&& value);
  void set_value(int index, const char* value);
  void set_value(int index, const char* value, std::size_t size);
  void set_value(int index, absl::string_view value);
  std::string* add_value();
  void add_value(const std::string& value);
  void add_value(std::string&& value);
  void add_value(const char* value);
  void add_value(const char* value, std::size_t size);
  void add_value(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& value() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_value();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_value() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:StringSetPreferenceValue)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      38, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_backup_5fpreference_2eproto;
};// -------------------------------------------------------------------

class StringPreferenceValue final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:StringPreferenceValue) */ {
 public:
  inline StringPreferenceValue() : StringPreferenceValue(nullptr) {}
  ~StringPreferenceValue() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StringPreferenceValue(::google::protobuf::internal::ConstantInitialized);

  inline StringPreferenceValue(const StringPreferenceValue& from)
      : StringPreferenceValue(nullptr, from) {}
  StringPreferenceValue(StringPreferenceValue&& from) noexcept
    : StringPreferenceValue() {
    *this = ::std::move(from);
  }

  inline StringPreferenceValue& operator=(const StringPreferenceValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline StringPreferenceValue& operator=(StringPreferenceValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StringPreferenceValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const StringPreferenceValue* internal_default_instance() {
    return reinterpret_cast<const StringPreferenceValue*>(
               &_StringPreferenceValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(StringPreferenceValue& a, StringPreferenceValue& b) {
    a.Swap(&b);
  }
  inline void Swap(StringPreferenceValue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StringPreferenceValue* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StringPreferenceValue* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StringPreferenceValue>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StringPreferenceValue& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StringPreferenceValue& from) {
    StringPreferenceValue::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StringPreferenceValue* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "StringPreferenceValue";
  }
  protected:
  explicit StringPreferenceValue(::google::protobuf::Arena* arena);
  StringPreferenceValue(::google::protobuf::Arena* arena, const StringPreferenceValue& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // string value = 1;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:StringPreferenceValue)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      35, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_backup_5fpreference_2eproto;
};// -------------------------------------------------------------------

class LongPreferenceValue final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LongPreferenceValue) */ {
 public:
  inline LongPreferenceValue() : LongPreferenceValue(nullptr) {}
  ~LongPreferenceValue() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LongPreferenceValue(::google::protobuf::internal::ConstantInitialized);

  inline LongPreferenceValue(const LongPreferenceValue& from)
      : LongPreferenceValue(nullptr, from) {}
  LongPreferenceValue(LongPreferenceValue&& from) noexcept
    : LongPreferenceValue() {
    *this = ::std::move(from);
  }

  inline LongPreferenceValue& operator=(const LongPreferenceValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline LongPreferenceValue& operator=(LongPreferenceValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LongPreferenceValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const LongPreferenceValue* internal_default_instance() {
    return reinterpret_cast<const LongPreferenceValue*>(
               &_LongPreferenceValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(LongPreferenceValue& a, LongPreferenceValue& b) {
    a.Swap(&b);
  }
  inline void Swap(LongPreferenceValue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LongPreferenceValue* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LongPreferenceValue* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LongPreferenceValue>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LongPreferenceValue& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LongPreferenceValue& from) {
    LongPreferenceValue::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LongPreferenceValue* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "LongPreferenceValue";
  }
  protected:
  explicit LongPreferenceValue(::google::protobuf::Arena* arena);
  LongPreferenceValue(::google::protobuf::Arena* arena, const LongPreferenceValue& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // int64 value = 1;
  void clear_value() ;
  ::int64_t value() const;
  void set_value(::int64_t value);

  private:
  ::int64_t _internal_value() const;
  void _internal_set_value(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:LongPreferenceValue)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_backup_5fpreference_2eproto;
};// -------------------------------------------------------------------

class IntPreferenceValue final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IntPreferenceValue) */ {
 public:
  inline IntPreferenceValue() : IntPreferenceValue(nullptr) {}
  ~IntPreferenceValue() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IntPreferenceValue(::google::protobuf::internal::ConstantInitialized);

  inline IntPreferenceValue(const IntPreferenceValue& from)
      : IntPreferenceValue(nullptr, from) {}
  IntPreferenceValue(IntPreferenceValue&& from) noexcept
    : IntPreferenceValue() {
    *this = ::std::move(from);
  }

  inline IntPreferenceValue& operator=(const IntPreferenceValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline IntPreferenceValue& operator=(IntPreferenceValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IntPreferenceValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const IntPreferenceValue* internal_default_instance() {
    return reinterpret_cast<const IntPreferenceValue*>(
               &_IntPreferenceValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(IntPreferenceValue& a, IntPreferenceValue& b) {
    a.Swap(&b);
  }
  inline void Swap(IntPreferenceValue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IntPreferenceValue* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IntPreferenceValue* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IntPreferenceValue>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IntPreferenceValue& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IntPreferenceValue& from) {
    IntPreferenceValue::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IntPreferenceValue* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IntPreferenceValue";
  }
  protected:
  explicit IntPreferenceValue(::google::protobuf::Arena* arena);
  IntPreferenceValue(::google::protobuf::Arena* arena, const IntPreferenceValue& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // int32 value = 1;
  void clear_value() ;
  ::int32_t value() const;
  void set_value(::int32_t value);

  private:
  ::int32_t _internal_value() const;
  void _internal_set_value(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:IntPreferenceValue)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_backup_5fpreference_2eproto;
};// -------------------------------------------------------------------

class FloatPreferenceValue final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FloatPreferenceValue) */ {
 public:
  inline FloatPreferenceValue() : FloatPreferenceValue(nullptr) {}
  ~FloatPreferenceValue() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FloatPreferenceValue(::google::protobuf::internal::ConstantInitialized);

  inline FloatPreferenceValue(const FloatPreferenceValue& from)
      : FloatPreferenceValue(nullptr, from) {}
  FloatPreferenceValue(FloatPreferenceValue&& from) noexcept
    : FloatPreferenceValue() {
    *this = ::std::move(from);
  }

  inline FloatPreferenceValue& operator=(const FloatPreferenceValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline FloatPreferenceValue& operator=(FloatPreferenceValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FloatPreferenceValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const FloatPreferenceValue* internal_default_instance() {
    return reinterpret_cast<const FloatPreferenceValue*>(
               &_FloatPreferenceValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(FloatPreferenceValue& a, FloatPreferenceValue& b) {
    a.Swap(&b);
  }
  inline void Swap(FloatPreferenceValue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FloatPreferenceValue* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FloatPreferenceValue* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FloatPreferenceValue>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FloatPreferenceValue& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FloatPreferenceValue& from) {
    FloatPreferenceValue::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FloatPreferenceValue* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "FloatPreferenceValue";
  }
  protected:
  explicit FloatPreferenceValue(::google::protobuf::Arena* arena);
  FloatPreferenceValue(::google::protobuf::Arena* arena, const FloatPreferenceValue& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // float value = 1;
  void clear_value() ;
  float value() const;
  void set_value(float value);

  private:
  float _internal_value() const;
  void _internal_set_value(float value);

  public:
  // @@protoc_insertion_point(class_scope:FloatPreferenceValue)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    float value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_backup_5fpreference_2eproto;
};// -------------------------------------------------------------------

class BooleanPreferenceValue final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BooleanPreferenceValue) */ {
 public:
  inline BooleanPreferenceValue() : BooleanPreferenceValue(nullptr) {}
  ~BooleanPreferenceValue() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BooleanPreferenceValue(::google::protobuf::internal::ConstantInitialized);

  inline BooleanPreferenceValue(const BooleanPreferenceValue& from)
      : BooleanPreferenceValue(nullptr, from) {}
  BooleanPreferenceValue(BooleanPreferenceValue&& from) noexcept
    : BooleanPreferenceValue() {
    *this = ::std::move(from);
  }

  inline BooleanPreferenceValue& operator=(const BooleanPreferenceValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline BooleanPreferenceValue& operator=(BooleanPreferenceValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BooleanPreferenceValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const BooleanPreferenceValue* internal_default_instance() {
    return reinterpret_cast<const BooleanPreferenceValue*>(
               &_BooleanPreferenceValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(BooleanPreferenceValue& a, BooleanPreferenceValue& b) {
    a.Swap(&b);
  }
  inline void Swap(BooleanPreferenceValue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BooleanPreferenceValue* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BooleanPreferenceValue* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BooleanPreferenceValue>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BooleanPreferenceValue& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BooleanPreferenceValue& from) {
    BooleanPreferenceValue::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BooleanPreferenceValue* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "BooleanPreferenceValue";
  }
  protected:
  explicit BooleanPreferenceValue(::google::protobuf::Arena* arena);
  BooleanPreferenceValue(::google::protobuf::Arena* arena, const BooleanPreferenceValue& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // bool value = 1;
  void clear_value() ;
  bool value() const;
  void set_value(bool value);

  private:
  bool _internal_value() const;
  void _internal_set_value(bool value);

  public:
  // @@protoc_insertion_point(class_scope:BooleanPreferenceValue)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_backup_5fpreference_2eproto;
};// -------------------------------------------------------------------

class PreferenceValue final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PreferenceValue) */ {
 public:
  inline PreferenceValue() : PreferenceValue(nullptr) {}
  ~PreferenceValue() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PreferenceValue(::google::protobuf::internal::ConstantInitialized);

  inline PreferenceValue(const PreferenceValue& from)
      : PreferenceValue(nullptr, from) {}
  PreferenceValue(PreferenceValue&& from) noexcept
    : PreferenceValue() {
    *this = ::std::move(from);
  }

  inline PreferenceValue& operator=(const PreferenceValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline PreferenceValue& operator=(PreferenceValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PreferenceValue& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCase {
    kIntValue = 1,
    kLongValue = 2,
    kFloatValue = 3,
    kStringValue = 4,
    kBooleanValue = 5,
    kStringSetValue = 6,
    VALUE_NOT_SET = 0,
  };

  static inline const PreferenceValue* internal_default_instance() {
    return reinterpret_cast<const PreferenceValue*>(
               &_PreferenceValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PreferenceValue& a, PreferenceValue& b) {
    a.Swap(&b);
  }
  inline void Swap(PreferenceValue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PreferenceValue* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PreferenceValue* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PreferenceValue>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PreferenceValue& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PreferenceValue& from) {
    PreferenceValue::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PreferenceValue* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "PreferenceValue";
  }
  protected:
  explicit PreferenceValue(::google::protobuf::Arena* arena);
  PreferenceValue(::google::protobuf::Arena* arena, const PreferenceValue& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIntValueFieldNumber = 1,
    kLongValueFieldNumber = 2,
    kFloatValueFieldNumber = 3,
    kStringValueFieldNumber = 4,
    kBooleanValueFieldNumber = 5,
    kStringSetValueFieldNumber = 6,
  };
  // .IntPreferenceValue int_value = 1;
  bool has_int_value() const;
  private:
  bool _internal_has_int_value() const;

  public:
  void clear_int_value() ;
  const ::IntPreferenceValue& int_value() const;
  PROTOBUF_NODISCARD ::IntPreferenceValue* release_int_value();
  ::IntPreferenceValue* mutable_int_value();
  void set_allocated_int_value(::IntPreferenceValue* value);
  void unsafe_arena_set_allocated_int_value(::IntPreferenceValue* value);
  ::IntPreferenceValue* unsafe_arena_release_int_value();

  private:
  const ::IntPreferenceValue& _internal_int_value() const;
  ::IntPreferenceValue* _internal_mutable_int_value();

  public:
  // .LongPreferenceValue long_value = 2;
  bool has_long_value() const;
  private:
  bool _internal_has_long_value() const;

  public:
  void clear_long_value() ;
  const ::LongPreferenceValue& long_value() const;
  PROTOBUF_NODISCARD ::LongPreferenceValue* release_long_value();
  ::LongPreferenceValue* mutable_long_value();
  void set_allocated_long_value(::LongPreferenceValue* value);
  void unsafe_arena_set_allocated_long_value(::LongPreferenceValue* value);
  ::LongPreferenceValue* unsafe_arena_release_long_value();

  private:
  const ::LongPreferenceValue& _internal_long_value() const;
  ::LongPreferenceValue* _internal_mutable_long_value();

  public:
  // .FloatPreferenceValue float_value = 3;
  bool has_float_value() const;
  private:
  bool _internal_has_float_value() const;

  public:
  void clear_float_value() ;
  const ::FloatPreferenceValue& float_value() const;
  PROTOBUF_NODISCARD ::FloatPreferenceValue* release_float_value();
  ::FloatPreferenceValue* mutable_float_value();
  void set_allocated_float_value(::FloatPreferenceValue* value);
  void unsafe_arena_set_allocated_float_value(::FloatPreferenceValue* value);
  ::FloatPreferenceValue* unsafe_arena_release_float_value();

  private:
  const ::FloatPreferenceValue& _internal_float_value() const;
  ::FloatPreferenceValue* _internal_mutable_float_value();

  public:
  // .StringPreferenceValue string_value = 4;
  bool has_string_value() const;
  private:
  bool _internal_has_string_value() const;

  public:
  void clear_string_value() ;
  const ::StringPreferenceValue& string_value() const;
  PROTOBUF_NODISCARD ::StringPreferenceValue* release_string_value();
  ::StringPreferenceValue* mutable_string_value();
  void set_allocated_string_value(::StringPreferenceValue* value);
  void unsafe_arena_set_allocated_string_value(::StringPreferenceValue* value);
  ::StringPreferenceValue* unsafe_arena_release_string_value();

  private:
  const ::StringPreferenceValue& _internal_string_value() const;
  ::StringPreferenceValue* _internal_mutable_string_value();

  public:
  // .BooleanPreferenceValue boolean_value = 5;
  bool has_boolean_value() const;
  private:
  bool _internal_has_boolean_value() const;

  public:
  void clear_boolean_value() ;
  const ::BooleanPreferenceValue& boolean_value() const;
  PROTOBUF_NODISCARD ::BooleanPreferenceValue* release_boolean_value();
  ::BooleanPreferenceValue* mutable_boolean_value();
  void set_allocated_boolean_value(::BooleanPreferenceValue* value);
  void unsafe_arena_set_allocated_boolean_value(::BooleanPreferenceValue* value);
  ::BooleanPreferenceValue* unsafe_arena_release_boolean_value();

  private:
  const ::BooleanPreferenceValue& _internal_boolean_value() const;
  ::BooleanPreferenceValue* _internal_mutable_boolean_value();

  public:
  // .StringSetPreferenceValue string_set_value = 6;
  bool has_string_set_value() const;
  private:
  bool _internal_has_string_set_value() const;

  public:
  void clear_string_set_value() ;
  const ::StringSetPreferenceValue& string_set_value() const;
  PROTOBUF_NODISCARD ::StringSetPreferenceValue* release_string_set_value();
  ::StringSetPreferenceValue* mutable_string_set_value();
  void set_allocated_string_set_value(::StringSetPreferenceValue* value);
  void unsafe_arena_set_allocated_string_set_value(::StringSetPreferenceValue* value);
  ::StringSetPreferenceValue* unsafe_arena_release_string_set_value();

  private:
  const ::StringSetPreferenceValue& _internal_string_set_value() const;
  ::StringSetPreferenceValue* _internal_mutable_string_set_value();

  public:
  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:PreferenceValue)
 private:
  class _Internal;
  void set_has_int_value();
  void set_has_long_value();
  void set_has_float_value();
  void set_has_string_value();
  void set_has_boolean_value();
  void set_has_string_set_value();

  inline bool has_value() const;
  inline void clear_has_value();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 6, 6,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    union ValueUnion {
      constexpr ValueUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::IntPreferenceValue* int_value_;
      ::LongPreferenceValue* long_value_;
      ::FloatPreferenceValue* float_value_;
      ::StringPreferenceValue* string_value_;
      ::BooleanPreferenceValue* boolean_value_;
      ::StringSetPreferenceValue* string_set_value_;
    } value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_backup_5fpreference_2eproto;
};// -------------------------------------------------------------------

class BackupPreference final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BackupPreference) */ {
 public:
  inline BackupPreference() : BackupPreference(nullptr) {}
  ~BackupPreference() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BackupPreference(::google::protobuf::internal::ConstantInitialized);

  inline BackupPreference(const BackupPreference& from)
      : BackupPreference(nullptr, from) {}
  BackupPreference(BackupPreference&& from) noexcept
    : BackupPreference() {
    *this = ::std::move(from);
  }

  inline BackupPreference& operator=(const BackupPreference& from) {
    CopyFrom(from);
    return *this;
  }
  inline BackupPreference& operator=(BackupPreference&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BackupPreference& default_instance() {
    return *internal_default_instance();
  }
  static inline const BackupPreference* internal_default_instance() {
    return reinterpret_cast<const BackupPreference*>(
               &_BackupPreference_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BackupPreference& a, BackupPreference& b) {
    a.Swap(&b);
  }
  inline void Swap(BackupPreference* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BackupPreference* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BackupPreference* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BackupPreference>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BackupPreference& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BackupPreference& from) {
    BackupPreference::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BackupPreference* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "BackupPreference";
  }
  protected:
  explicit BackupPreference(::google::protobuf::Arena* arena);
  BackupPreference(::google::protobuf::Arena* arena, const BackupPreference& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // .PreferenceValue value = 2;
  bool has_value() const;
  void clear_value() ;
  const ::PreferenceValue& value() const;
  PROTOBUF_NODISCARD ::PreferenceValue* release_value();
  ::PreferenceValue* mutable_value();
  void set_allocated_value(::PreferenceValue* value);
  void unsafe_arena_set_allocated_value(::PreferenceValue* value);
  ::PreferenceValue* unsafe_arena_release_value();

  private:
  const ::PreferenceValue& _internal_value() const;
  ::PreferenceValue* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:BackupPreference)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      28, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::PreferenceValue* value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_backup_5fpreference_2eproto;
};// -------------------------------------------------------------------

class BackupSourcePreferences final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BackupSourcePreferences) */ {
 public:
  inline BackupSourcePreferences() : BackupSourcePreferences(nullptr) {}
  ~BackupSourcePreferences() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BackupSourcePreferences(::google::protobuf::internal::ConstantInitialized);

  inline BackupSourcePreferences(const BackupSourcePreferences& from)
      : BackupSourcePreferences(nullptr, from) {}
  BackupSourcePreferences(BackupSourcePreferences&& from) noexcept
    : BackupSourcePreferences() {
    *this = ::std::move(from);
  }

  inline BackupSourcePreferences& operator=(const BackupSourcePreferences& from) {
    CopyFrom(from);
    return *this;
  }
  inline BackupSourcePreferences& operator=(BackupSourcePreferences&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BackupSourcePreferences& default_instance() {
    return *internal_default_instance();
  }
  static inline const BackupSourcePreferences* internal_default_instance() {
    return reinterpret_cast<const BackupSourcePreferences*>(
               &_BackupSourcePreferences_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(BackupSourcePreferences& a, BackupSourcePreferences& b) {
    a.Swap(&b);
  }
  inline void Swap(BackupSourcePreferences* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BackupSourcePreferences* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BackupSourcePreferences* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BackupSourcePreferences>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BackupSourcePreferences& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BackupSourcePreferences& from) {
    BackupSourcePreferences::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BackupSourcePreferences* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "BackupSourcePreferences";
  }
  protected:
  explicit BackupSourcePreferences(::google::protobuf::Arena* arena);
  BackupSourcePreferences(::google::protobuf::Arena* arena, const BackupSourcePreferences& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPrefsFieldNumber = 2,
    kSourceKeyFieldNumber = 1,
  };
  // repeated .BackupPreference prefs = 2;
  int prefs_size() const;
  private:
  int _internal_prefs_size() const;

  public:
  void clear_prefs() ;
  ::BackupPreference* mutable_prefs(int index);
  ::google::protobuf::RepeatedPtrField< ::BackupPreference >*
      mutable_prefs();
  private:
  const ::google::protobuf::RepeatedPtrField<::BackupPreference>& _internal_prefs() const;
  ::google::protobuf::RepeatedPtrField<::BackupPreference>* _internal_mutable_prefs();
  public:
  const ::BackupPreference& prefs(int index) const;
  ::BackupPreference* add_prefs();
  const ::google::protobuf::RepeatedPtrField< ::BackupPreference >&
      prefs() const;
  // string source_key = 1;
  void clear_source_key() ;
  const std::string& source_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_key(Arg_&& arg, Args_... args);
  std::string* mutable_source_key();
  PROTOBUF_NODISCARD std::string* release_source_key();
  void set_allocated_source_key(std::string* value);

  private:
  const std::string& _internal_source_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_key(
      const std::string& value);
  std::string* _internal_mutable_source_key();

  public:
  // @@protoc_insertion_point(class_scope:BackupSourcePreferences)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      42, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::BackupPreference > prefs_;
    ::google::protobuf::internal::ArenaStringPtr source_key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_backup_5fpreference_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BackupPreference

// string key = 1;
inline void BackupPreference::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& BackupPreference::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BackupPreference.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BackupPreference::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BackupPreference.key)
}
inline std::string* BackupPreference::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:BackupPreference.key)
  return _s;
}
inline const std::string& BackupPreference::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void BackupPreference::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArena());
}
inline std::string* BackupPreference::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* BackupPreference::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:BackupPreference.key)
  return _impl_.key_.Release();
}
inline void BackupPreference::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BackupPreference.key)
}

// .PreferenceValue value = 2;
inline bool BackupPreference::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.value_ != nullptr);
  return value;
}
inline void BackupPreference::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.value_ != nullptr) _impl_.value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::PreferenceValue& BackupPreference::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::PreferenceValue* p = _impl_.value_;
  return p != nullptr ? *p : reinterpret_cast<const ::PreferenceValue&>(::_PreferenceValue_default_instance_);
}
inline const ::PreferenceValue& BackupPreference::value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BackupPreference.value)
  return _internal_value();
}
inline void BackupPreference::unsafe_arena_set_allocated_value(::PreferenceValue* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.value_);
  }
  _impl_.value_ = reinterpret_cast<::PreferenceValue*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:BackupPreference.value)
}
inline ::PreferenceValue* BackupPreference::release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PreferenceValue* released = _impl_.value_;
  _impl_.value_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::PreferenceValue* BackupPreference::unsafe_arena_release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:BackupPreference.value)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PreferenceValue* temp = _impl_.value_;
  _impl_.value_ = nullptr;
  return temp;
}
inline ::PreferenceValue* BackupPreference::_internal_mutable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.value_ == nullptr) {
    auto* p = CreateMaybeMessage<::PreferenceValue>(GetArena());
    _impl_.value_ = reinterpret_cast<::PreferenceValue*>(p);
  }
  return _impl_.value_;
}
inline ::PreferenceValue* BackupPreference::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::PreferenceValue* _msg = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:BackupPreference.value)
  return _msg;
}
inline void BackupPreference::set_allocated_value(::PreferenceValue* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::PreferenceValue*>(_impl_.value_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::PreferenceValue*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.value_ = reinterpret_cast<::PreferenceValue*>(value);
  // @@protoc_insertion_point(field_set_allocated:BackupPreference.value)
}

// -------------------------------------------------------------------

// BackupSourcePreferences

// string source_key = 1;
inline void BackupSourcePreferences::clear_source_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.source_key_.ClearToEmpty();
}
inline const std::string& BackupSourcePreferences::source_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BackupSourcePreferences.source_key)
  return _internal_source_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BackupSourcePreferences::set_source_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.source_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BackupSourcePreferences.source_key)
}
inline std::string* BackupSourcePreferences::mutable_source_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_key();
  // @@protoc_insertion_point(field_mutable:BackupSourcePreferences.source_key)
  return _s;
}
inline const std::string& BackupSourcePreferences::_internal_source_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.source_key_.Get();
}
inline void BackupSourcePreferences::_internal_set_source_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.source_key_.Set(value, GetArena());
}
inline std::string* BackupSourcePreferences::_internal_mutable_source_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.source_key_.Mutable( GetArena());
}
inline std::string* BackupSourcePreferences::release_source_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:BackupSourcePreferences.source_key)
  return _impl_.source_key_.Release();
}
inline void BackupSourcePreferences::set_allocated_source_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.source_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_key_.IsDefault()) {
          _impl_.source_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BackupSourcePreferences.source_key)
}

// repeated .BackupPreference prefs = 2;
inline int BackupSourcePreferences::_internal_prefs_size() const {
  return _internal_prefs().size();
}
inline int BackupSourcePreferences::prefs_size() const {
  return _internal_prefs_size();
}
inline void BackupSourcePreferences::clear_prefs() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.prefs_.Clear();
}
inline ::BackupPreference* BackupSourcePreferences::mutable_prefs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BackupSourcePreferences.prefs)
  return _internal_mutable_prefs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BackupPreference>* BackupSourcePreferences::mutable_prefs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BackupSourcePreferences.prefs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_prefs();
}
inline const ::BackupPreference& BackupSourcePreferences::prefs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BackupSourcePreferences.prefs)
  return _internal_prefs().Get(index);
}
inline ::BackupPreference* BackupSourcePreferences::add_prefs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::BackupPreference* _add = _internal_mutable_prefs()->Add();
  // @@protoc_insertion_point(field_add:BackupSourcePreferences.prefs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BackupPreference>& BackupSourcePreferences::prefs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BackupSourcePreferences.prefs)
  return _internal_prefs();
}
inline const ::google::protobuf::RepeatedPtrField<::BackupPreference>&
BackupSourcePreferences::_internal_prefs() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.prefs_;
}
inline ::google::protobuf::RepeatedPtrField<::BackupPreference>*
BackupSourcePreferences::_internal_mutable_prefs() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.prefs_;
}

// -------------------------------------------------------------------

// PreferenceValue

// .IntPreferenceValue int_value = 1;
inline bool PreferenceValue::has_int_value() const {
  return value_case() == kIntValue;
}
inline bool PreferenceValue::_internal_has_int_value() const {
  return value_case() == kIntValue;
}
inline void PreferenceValue::set_has_int_value() {
  _impl_._oneof_case_[0] = kIntValue;
}
inline void PreferenceValue::clear_int_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value_case() == kIntValue) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.int_value_;
    }
    clear_has_value();
  }
}
inline ::IntPreferenceValue* PreferenceValue::release_int_value() {
  // @@protoc_insertion_point(field_release:PreferenceValue.int_value)
  if (value_case() == kIntValue) {
    clear_has_value();
    auto* temp = _impl_.value_.int_value_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.int_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IntPreferenceValue& PreferenceValue::_internal_int_value() const {
  return value_case() == kIntValue ? *_impl_.value_.int_value_ : reinterpret_cast<::IntPreferenceValue&>(::_IntPreferenceValue_default_instance_);
}
inline const ::IntPreferenceValue& PreferenceValue::int_value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PreferenceValue.int_value)
  return _internal_int_value();
}
inline ::IntPreferenceValue* PreferenceValue::unsafe_arena_release_int_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:PreferenceValue.int_value)
  if (value_case() == kIntValue) {
    clear_has_value();
    auto* temp = _impl_.value_.int_value_;
    _impl_.value_.int_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void PreferenceValue::unsafe_arena_set_allocated_int_value(::IntPreferenceValue* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_int_value();
    _impl_.value_.int_value_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PreferenceValue.int_value)
}
inline ::IntPreferenceValue* PreferenceValue::_internal_mutable_int_value() {
  if (value_case() != kIntValue) {
    clear_value();
    set_has_int_value();
    _impl_.value_.int_value_ = CreateMaybeMessage<::IntPreferenceValue>(GetArena());
  }
  return _impl_.value_.int_value_;
}
inline ::IntPreferenceValue* PreferenceValue::mutable_int_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::IntPreferenceValue* _msg = _internal_mutable_int_value();
  // @@protoc_insertion_point(field_mutable:PreferenceValue.int_value)
  return _msg;
}

// .LongPreferenceValue long_value = 2;
inline bool PreferenceValue::has_long_value() const {
  return value_case() == kLongValue;
}
inline bool PreferenceValue::_internal_has_long_value() const {
  return value_case() == kLongValue;
}
inline void PreferenceValue::set_has_long_value() {
  _impl_._oneof_case_[0] = kLongValue;
}
inline void PreferenceValue::clear_long_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value_case() == kLongValue) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.long_value_;
    }
    clear_has_value();
  }
}
inline ::LongPreferenceValue* PreferenceValue::release_long_value() {
  // @@protoc_insertion_point(field_release:PreferenceValue.long_value)
  if (value_case() == kLongValue) {
    clear_has_value();
    auto* temp = _impl_.value_.long_value_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.long_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::LongPreferenceValue& PreferenceValue::_internal_long_value() const {
  return value_case() == kLongValue ? *_impl_.value_.long_value_ : reinterpret_cast<::LongPreferenceValue&>(::_LongPreferenceValue_default_instance_);
}
inline const ::LongPreferenceValue& PreferenceValue::long_value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PreferenceValue.long_value)
  return _internal_long_value();
}
inline ::LongPreferenceValue* PreferenceValue::unsafe_arena_release_long_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:PreferenceValue.long_value)
  if (value_case() == kLongValue) {
    clear_has_value();
    auto* temp = _impl_.value_.long_value_;
    _impl_.value_.long_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void PreferenceValue::unsafe_arena_set_allocated_long_value(::LongPreferenceValue* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_long_value();
    _impl_.value_.long_value_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PreferenceValue.long_value)
}
inline ::LongPreferenceValue* PreferenceValue::_internal_mutable_long_value() {
  if (value_case() != kLongValue) {
    clear_value();
    set_has_long_value();
    _impl_.value_.long_value_ = CreateMaybeMessage<::LongPreferenceValue>(GetArena());
  }
  return _impl_.value_.long_value_;
}
inline ::LongPreferenceValue* PreferenceValue::mutable_long_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::LongPreferenceValue* _msg = _internal_mutable_long_value();
  // @@protoc_insertion_point(field_mutable:PreferenceValue.long_value)
  return _msg;
}

// .FloatPreferenceValue float_value = 3;
inline bool PreferenceValue::has_float_value() const {
  return value_case() == kFloatValue;
}
inline bool PreferenceValue::_internal_has_float_value() const {
  return value_case() == kFloatValue;
}
inline void PreferenceValue::set_has_float_value() {
  _impl_._oneof_case_[0] = kFloatValue;
}
inline void PreferenceValue::clear_float_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value_case() == kFloatValue) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.float_value_;
    }
    clear_has_value();
  }
}
inline ::FloatPreferenceValue* PreferenceValue::release_float_value() {
  // @@protoc_insertion_point(field_release:PreferenceValue.float_value)
  if (value_case() == kFloatValue) {
    clear_has_value();
    auto* temp = _impl_.value_.float_value_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.float_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::FloatPreferenceValue& PreferenceValue::_internal_float_value() const {
  return value_case() == kFloatValue ? *_impl_.value_.float_value_ : reinterpret_cast<::FloatPreferenceValue&>(::_FloatPreferenceValue_default_instance_);
}
inline const ::FloatPreferenceValue& PreferenceValue::float_value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PreferenceValue.float_value)
  return _internal_float_value();
}
inline ::FloatPreferenceValue* PreferenceValue::unsafe_arena_release_float_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:PreferenceValue.float_value)
  if (value_case() == kFloatValue) {
    clear_has_value();
    auto* temp = _impl_.value_.float_value_;
    _impl_.value_.float_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void PreferenceValue::unsafe_arena_set_allocated_float_value(::FloatPreferenceValue* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_float_value();
    _impl_.value_.float_value_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PreferenceValue.float_value)
}
inline ::FloatPreferenceValue* PreferenceValue::_internal_mutable_float_value() {
  if (value_case() != kFloatValue) {
    clear_value();
    set_has_float_value();
    _impl_.value_.float_value_ = CreateMaybeMessage<::FloatPreferenceValue>(GetArena());
  }
  return _impl_.value_.float_value_;
}
inline ::FloatPreferenceValue* PreferenceValue::mutable_float_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::FloatPreferenceValue* _msg = _internal_mutable_float_value();
  // @@protoc_insertion_point(field_mutable:PreferenceValue.float_value)
  return _msg;
}

// .StringPreferenceValue string_value = 4;
inline bool PreferenceValue::has_string_value() const {
  return value_case() == kStringValue;
}
inline bool PreferenceValue::_internal_has_string_value() const {
  return value_case() == kStringValue;
}
inline void PreferenceValue::set_has_string_value() {
  _impl_._oneof_case_[0] = kStringValue;
}
inline void PreferenceValue::clear_string_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value_case() == kStringValue) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.string_value_;
    }
    clear_has_value();
  }
}
inline ::StringPreferenceValue* PreferenceValue::release_string_value() {
  // @@protoc_insertion_point(field_release:PreferenceValue.string_value)
  if (value_case() == kStringValue) {
    clear_has_value();
    auto* temp = _impl_.value_.string_value_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.string_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::StringPreferenceValue& PreferenceValue::_internal_string_value() const {
  return value_case() == kStringValue ? *_impl_.value_.string_value_ : reinterpret_cast<::StringPreferenceValue&>(::_StringPreferenceValue_default_instance_);
}
inline const ::StringPreferenceValue& PreferenceValue::string_value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PreferenceValue.string_value)
  return _internal_string_value();
}
inline ::StringPreferenceValue* PreferenceValue::unsafe_arena_release_string_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:PreferenceValue.string_value)
  if (value_case() == kStringValue) {
    clear_has_value();
    auto* temp = _impl_.value_.string_value_;
    _impl_.value_.string_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void PreferenceValue::unsafe_arena_set_allocated_string_value(::StringPreferenceValue* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_string_value();
    _impl_.value_.string_value_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PreferenceValue.string_value)
}
inline ::StringPreferenceValue* PreferenceValue::_internal_mutable_string_value() {
  if (value_case() != kStringValue) {
    clear_value();
    set_has_string_value();
    _impl_.value_.string_value_ = CreateMaybeMessage<::StringPreferenceValue>(GetArena());
  }
  return _impl_.value_.string_value_;
}
inline ::StringPreferenceValue* PreferenceValue::mutable_string_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::StringPreferenceValue* _msg = _internal_mutable_string_value();
  // @@protoc_insertion_point(field_mutable:PreferenceValue.string_value)
  return _msg;
}

// .BooleanPreferenceValue boolean_value = 5;
inline bool PreferenceValue::has_boolean_value() const {
  return value_case() == kBooleanValue;
}
inline bool PreferenceValue::_internal_has_boolean_value() const {
  return value_case() == kBooleanValue;
}
inline void PreferenceValue::set_has_boolean_value() {
  _impl_._oneof_case_[0] = kBooleanValue;
}
inline void PreferenceValue::clear_boolean_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value_case() == kBooleanValue) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.boolean_value_;
    }
    clear_has_value();
  }
}
inline ::BooleanPreferenceValue* PreferenceValue::release_boolean_value() {
  // @@protoc_insertion_point(field_release:PreferenceValue.boolean_value)
  if (value_case() == kBooleanValue) {
    clear_has_value();
    auto* temp = _impl_.value_.boolean_value_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.boolean_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::BooleanPreferenceValue& PreferenceValue::_internal_boolean_value() const {
  return value_case() == kBooleanValue ? *_impl_.value_.boolean_value_ : reinterpret_cast<::BooleanPreferenceValue&>(::_BooleanPreferenceValue_default_instance_);
}
inline const ::BooleanPreferenceValue& PreferenceValue::boolean_value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PreferenceValue.boolean_value)
  return _internal_boolean_value();
}
inline ::BooleanPreferenceValue* PreferenceValue::unsafe_arena_release_boolean_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:PreferenceValue.boolean_value)
  if (value_case() == kBooleanValue) {
    clear_has_value();
    auto* temp = _impl_.value_.boolean_value_;
    _impl_.value_.boolean_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void PreferenceValue::unsafe_arena_set_allocated_boolean_value(::BooleanPreferenceValue* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_boolean_value();
    _impl_.value_.boolean_value_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PreferenceValue.boolean_value)
}
inline ::BooleanPreferenceValue* PreferenceValue::_internal_mutable_boolean_value() {
  if (value_case() != kBooleanValue) {
    clear_value();
    set_has_boolean_value();
    _impl_.value_.boolean_value_ = CreateMaybeMessage<::BooleanPreferenceValue>(GetArena());
  }
  return _impl_.value_.boolean_value_;
}
inline ::BooleanPreferenceValue* PreferenceValue::mutable_boolean_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::BooleanPreferenceValue* _msg = _internal_mutable_boolean_value();
  // @@protoc_insertion_point(field_mutable:PreferenceValue.boolean_value)
  return _msg;
}

// .StringSetPreferenceValue string_set_value = 6;
inline bool PreferenceValue::has_string_set_value() const {
  return value_case() == kStringSetValue;
}
inline bool PreferenceValue::_internal_has_string_set_value() const {
  return value_case() == kStringSetValue;
}
inline void PreferenceValue::set_has_string_set_value() {
  _impl_._oneof_case_[0] = kStringSetValue;
}
inline void PreferenceValue::clear_string_set_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value_case() == kStringSetValue) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.string_set_value_;
    }
    clear_has_value();
  }
}
inline ::StringSetPreferenceValue* PreferenceValue::release_string_set_value() {
  // @@protoc_insertion_point(field_release:PreferenceValue.string_set_value)
  if (value_case() == kStringSetValue) {
    clear_has_value();
    auto* temp = _impl_.value_.string_set_value_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.string_set_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::StringSetPreferenceValue& PreferenceValue::_internal_string_set_value() const {
  return value_case() == kStringSetValue ? *_impl_.value_.string_set_value_ : reinterpret_cast<::StringSetPreferenceValue&>(::_StringSetPreferenceValue_default_instance_);
}
inline const ::StringSetPreferenceValue& PreferenceValue::string_set_value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:PreferenceValue.string_set_value)
  return _internal_string_set_value();
}
inline ::StringSetPreferenceValue* PreferenceValue::unsafe_arena_release_string_set_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:PreferenceValue.string_set_value)
  if (value_case() == kStringSetValue) {
    clear_has_value();
    auto* temp = _impl_.value_.string_set_value_;
    _impl_.value_.string_set_value_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void PreferenceValue::unsafe_arena_set_allocated_string_set_value(::StringSetPreferenceValue* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_string_set_value();
    _impl_.value_.string_set_value_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PreferenceValue.string_set_value)
}
inline ::StringSetPreferenceValue* PreferenceValue::_internal_mutable_string_set_value() {
  if (value_case() != kStringSetValue) {
    clear_value();
    set_has_string_set_value();
    _impl_.value_.string_set_value_ = CreateMaybeMessage<::StringSetPreferenceValue>(GetArena());
  }
  return _impl_.value_.string_set_value_;
}
inline ::StringSetPreferenceValue* PreferenceValue::mutable_string_set_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::StringSetPreferenceValue* _msg = _internal_mutable_string_set_value();
  // @@protoc_insertion_point(field_mutable:PreferenceValue.string_set_value)
  return _msg;
}

inline bool PreferenceValue::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void PreferenceValue::clear_has_value() {
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}
inline PreferenceValue::ValueCase PreferenceValue::value_case() const {
  return PreferenceValue::ValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// IntPreferenceValue

// int32 value = 1;
inline void IntPreferenceValue::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_ = 0;
}
inline ::int32_t IntPreferenceValue::value() const {
  // @@protoc_insertion_point(field_get:IntPreferenceValue.value)
  return _internal_value();
}
inline void IntPreferenceValue::set_value(::int32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:IntPreferenceValue.value)
}
inline ::int32_t IntPreferenceValue::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void IntPreferenceValue::_internal_set_value(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// LongPreferenceValue

// int64 value = 1;
inline void LongPreferenceValue::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_ = ::int64_t{0};
}
inline ::int64_t LongPreferenceValue::value() const {
  // @@protoc_insertion_point(field_get:LongPreferenceValue.value)
  return _internal_value();
}
inline void LongPreferenceValue::set_value(::int64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:LongPreferenceValue.value)
}
inline ::int64_t LongPreferenceValue::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void LongPreferenceValue::_internal_set_value(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// FloatPreferenceValue

// float value = 1;
inline void FloatPreferenceValue::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_ = 0;
}
inline float FloatPreferenceValue::value() const {
  // @@protoc_insertion_point(field_get:FloatPreferenceValue.value)
  return _internal_value();
}
inline void FloatPreferenceValue::set_value(float value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:FloatPreferenceValue.value)
}
inline float FloatPreferenceValue::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void FloatPreferenceValue::_internal_set_value(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// StringPreferenceValue

// string value = 1;
inline void StringPreferenceValue::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& StringPreferenceValue::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:StringPreferenceValue.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StringPreferenceValue::set_value(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:StringPreferenceValue.value)
}
inline std::string* StringPreferenceValue::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:StringPreferenceValue.value)
  return _s;
}
inline const std::string& StringPreferenceValue::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_.Get();
}
inline void StringPreferenceValue::_internal_set_value(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_.Set(value, GetArena());
}
inline std::string* StringPreferenceValue::_internal_mutable_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* StringPreferenceValue::release_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:StringPreferenceValue.value)
  return _impl_.value_.Release();
}
inline void StringPreferenceValue::set_allocated_value(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:StringPreferenceValue.value)
}

// -------------------------------------------------------------------

// BooleanPreferenceValue

// bool value = 1;
inline void BooleanPreferenceValue::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_ = false;
}
inline bool BooleanPreferenceValue::value() const {
  // @@protoc_insertion_point(field_get:BooleanPreferenceValue.value)
  return _internal_value();
}
inline void BooleanPreferenceValue::set_value(bool value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:BooleanPreferenceValue.value)
}
inline bool BooleanPreferenceValue::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void BooleanPreferenceValue::_internal_set_value(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// StringSetPreferenceValue

// repeated string value = 1;
inline int StringSetPreferenceValue::_internal_value_size() const {
  return _internal_value().size();
}
inline int StringSetPreferenceValue::value_size() const {
  return _internal_value_size();
}
inline void StringSetPreferenceValue::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_.Clear();
}
inline std::string* StringSetPreferenceValue::add_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_value()->Add();
  // @@protoc_insertion_point(field_add_mutable:StringSetPreferenceValue.value)
  return _s;
}
inline const std::string& StringSetPreferenceValue::value(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:StringSetPreferenceValue.value)
  return _internal_value().Get(index);
}
inline std::string* StringSetPreferenceValue::mutable_value(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:StringSetPreferenceValue.value)
  return _internal_mutable_value()->Mutable(index);
}
inline void StringSetPreferenceValue::set_value(int index, const std::string& value) {
  _internal_mutable_value()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:StringSetPreferenceValue.value)
}
inline void StringSetPreferenceValue::set_value(int index, std::string&& value) {
  _internal_mutable_value()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:StringSetPreferenceValue.value)
}
inline void StringSetPreferenceValue::set_value(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_value()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:StringSetPreferenceValue.value)
}
inline void StringSetPreferenceValue::set_value(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_value()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:StringSetPreferenceValue.value)
}
inline void StringSetPreferenceValue::set_value(int index, absl::string_view value) {
  _internal_mutable_value()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:StringSetPreferenceValue.value)
}
inline void StringSetPreferenceValue::add_value(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_value()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:StringSetPreferenceValue.value)
}
inline void StringSetPreferenceValue::add_value(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_value()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:StringSetPreferenceValue.value)
}
inline void StringSetPreferenceValue::add_value(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_value()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:StringSetPreferenceValue.value)
}
inline void StringSetPreferenceValue::add_value(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_value()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:StringSetPreferenceValue.value)
}
inline void StringSetPreferenceValue::add_value(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_value()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:StringSetPreferenceValue.value)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StringSetPreferenceValue::value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:StringSetPreferenceValue.value)
  return _internal_value();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StringSetPreferenceValue::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:StringSetPreferenceValue.value)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_value();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StringSetPreferenceValue::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StringSetPreferenceValue::_internal_mutable_value() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.value_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_backup_5fpreference_2eproto_2epb_2eh
