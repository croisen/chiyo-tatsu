// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: manga_update_strategy.proto
// Protobuf C++ Version: 4.25.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_manga_5fupdate_5fstrategy_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_manga_5fupdate_5fstrategy_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_manga_5fupdate_5fstrategy_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_manga_5fupdate_5fstrategy_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_manga_5fupdate_5fstrategy_2eproto;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum UpdateStrategy : int {
  ALWAYS_UPDATE = 0,
  ONLY_FETCH_ONCE = 1,
  UpdateStrategy_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  UpdateStrategy_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool UpdateStrategy_IsValid(int value);
extern const uint32_t UpdateStrategy_internal_data_[];
constexpr UpdateStrategy UpdateStrategy_MIN = static_cast<UpdateStrategy>(0);
constexpr UpdateStrategy UpdateStrategy_MAX = static_cast<UpdateStrategy>(1);
constexpr int UpdateStrategy_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
UpdateStrategy_descriptor();
template <typename T>
const std::string& UpdateStrategy_Name(T value) {
  static_assert(std::is_same<T, UpdateStrategy>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to UpdateStrategy_Name().");
  return UpdateStrategy_Name(static_cast<UpdateStrategy>(value));
}
template <>
inline const std::string& UpdateStrategy_Name(UpdateStrategy value) {
  return ::google::protobuf::internal::NameOfDenseEnum<UpdateStrategy_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool UpdateStrategy_Parse(absl::string_view name, UpdateStrategy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UpdateStrategy>(
      UpdateStrategy_descriptor(), name, value);
}

// ===================================================================



// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::UpdateStrategy> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::UpdateStrategy>() {
  return ::UpdateStrategy_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_manga_5fupdate_5fstrategy_2eproto_2epb_2eh
