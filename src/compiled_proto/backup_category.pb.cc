// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: backup_category.proto
// Protobuf C++ Version: 5.28.0-dev

#include "backup_category.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr BackupCategory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_{0},
        updateinterval_{0},
        flags_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BackupCategory::BackupCategory(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BackupCategoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BackupCategoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BackupCategoryDefaultTypeInternal() {}
  union {
    BackupCategory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BackupCategoryDefaultTypeInternal _BackupCategory_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_backup_5fcategory_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_backup_5fcategory_2eproto = nullptr;
const ::uint32_t
    TableStruct_backup_5fcategory_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::BackupCategory, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::BackupCategory, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::BackupCategory, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::BackupCategory, _impl_.order_),
        PROTOBUF_FIELD_OFFSET(::BackupCategory, _impl_.updateinterval_),
        PROTOBUF_FIELD_OFFSET(::BackupCategory, _impl_.flags_),
        ~0u,
        ~0u,
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::BackupCategory)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_BackupCategory_default_instance_._instance,
};
const char descriptor_table_protodef_backup_5fcategory_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025backup_category.proto\"l\n\016BackupCategor"
    "y\022\014\n\004name\030\001 \001(\t\022\r\n\005order\030\002 \001(\005\022\033\n\016update"
    "Interval\030\003 \001(\005H\000\210\001\001\022\r\n\005flags\030d \001(\005B\021\n\017_u"
    "pdateIntervalb\006proto3"
};
static ::absl::once_flag descriptor_table_backup_5fcategory_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_backup_5fcategory_2eproto = {
    false,
    false,
    141,
    descriptor_table_protodef_backup_5fcategory_2eproto,
    "backup_category.proto",
    &descriptor_table_backup_5fcategory_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_backup_5fcategory_2eproto::offsets,
    file_level_enum_descriptors_backup_5fcategory_2eproto,
    file_level_service_descriptors_backup_5fcategory_2eproto,
};
// ===================================================================

class BackupCategory::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BackupCategory>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BackupCategory, _impl_._has_bits_);
};

BackupCategory::BackupCategory(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BackupCategory)
}
inline PROTOBUF_NDEBUG_INLINE BackupCategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::BackupCategory& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

BackupCategory::BackupCategory(
    ::google::protobuf::Arena* arena,
    const BackupCategory& from)
    : ::google::protobuf::Message(arena) {
  BackupCategory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, order_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, order_),
           offsetof(Impl_, flags_) -
               offsetof(Impl_, order_) +
               sizeof(Impl_::flags_));

  // @@protoc_insertion_point(copy_constructor:BackupCategory)
}
inline PROTOBUF_NDEBUG_INLINE BackupCategory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena) {}

inline void BackupCategory::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, order_),
           0,
           offsetof(Impl_, flags_) -
               offsetof(Impl_, order_) +
               sizeof(Impl_::flags_));
}
BackupCategory::~BackupCategory() {
  // @@protoc_insertion_point(destructor:BackupCategory)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BackupCategory::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
BackupCategory::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(BackupCategory, _impl_._cached_size_),
              false,
          },
          &BackupCategory::MergeImpl,
          &BackupCategory::kDescriptorMethods,
          &descriptor_table_backup_5fcategory_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 27, 7> BackupCategory::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BackupCategory, _impl_._has_bits_),
    0, // no _extensions_
    100, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BackupCategory_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::BackupCategory>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 flags = 100;
    {::_pbi::TcParser::FastV32S2,
     {1696, 63, 0, PROTOBUF_FIELD_OFFSET(BackupCategory, _impl_.flags_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BackupCategory, _impl_.name_)}},
    // int32 order = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BackupCategory, _impl_.order_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BackupCategory, _impl_.order_)}},
    // optional int32 updateInterval = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BackupCategory, _impl_.updateinterval_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(BackupCategory, _impl_.updateinterval_)}},
  }}, {{
    100, 0, 1,
    65534, 3,
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(BackupCategory, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 order = 2;
    {PROTOBUF_FIELD_OFFSET(BackupCategory, _impl_.order_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // optional int32 updateInterval = 3;
    {PROTOBUF_FIELD_OFFSET(BackupCategory, _impl_.updateinterval_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 flags = 100;
    {PROTOBUF_FIELD_OFFSET(BackupCategory, _impl_.flags_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\16\4\0\0\0\0\0\0"
    "BackupCategory"
    "name"
  }},
};

PROTOBUF_NOINLINE void BackupCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:BackupCategory)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.order_ = 0;
  _impl_.updateinterval_ = 0;
  _impl_.flags_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* BackupCategory::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BackupCategory)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "BackupCategory.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 order = 2;
  if (this->_internal_order() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_order(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 updateInterval = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_updateinterval(), target);
  }

  // int32 flags = 100;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        100, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BackupCategory)
  return target;
}

::size_t BackupCategory::ByteSizeLong() const {
  // @@protoc_insertion_point(message_byte_size_start:BackupCategory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(
      reinterpret_cast<const void*>(this));
   {
    // string name = 1;
    if (!this->_internal_name().empty()) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }
    // int32 order = 2;
    if (this->_internal_order() != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_order());
    }
  }
   {
    // optional int32 updateInterval = 3;
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_updateinterval());
    }
  }
   {
    // int32 flags = 100;
    if (this->_internal_flags() != 0) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_flags());
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void BackupCategory::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BackupCategory*>(&to_msg);
  auto& from = static_cast<const BackupCategory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BackupCategory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_order() != 0) {
    _this->_impl_.order_ = from._impl_.order_;
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.updateinterval_ = from._impl_.updateinterval_;
  }
  if (from._internal_flags() != 0) {
    _this->_impl_.flags_ = from._impl_.flags_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BackupCategory::CopyFrom(const BackupCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BackupCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BackupCategory::InternalSwap(BackupCategory* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BackupCategory, _impl_.flags_)
      + sizeof(BackupCategory::_impl_.flags_)
      - PROTOBUF_FIELD_OFFSET(BackupCategory, _impl_.order_)>(
          reinterpret_cast<char*>(&_impl_.order_),
          reinterpret_cast<char*>(&other->_impl_.order_));
}

::google::protobuf::Metadata BackupCategory::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_backup_5fcategory_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
