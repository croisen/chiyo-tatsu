/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: tachiyomi.proto */

#ifndef PROTOBUF_C_tachiyomi_2eproto__INCLUDED
#define PROTOBUF_C_tachiyomi_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

typedef struct BackupManga BackupManga;
typedef struct BackupChapter BackupChapter;
typedef struct BrokenBackupHistory BrokenBackupHistory;
typedef struct BackupTracking BackupTracking;
typedef struct BackupHistory BackupHistory;
typedef struct BackupMergedMangaReference BackupMergedMangaReference;
typedef struct BackupFlatMetadata BackupFlatMetadata;

/* --- enums --- */

typedef enum _UpdateStrategy
{
    /*
     * Define other update strategies as needed
     */
    UPDATE_STRATEGY__ALWAYS_UPDATE =
        0 PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(UPDATE_STRATEGY)
} UpdateStrategy;

/* --- messages --- */

struct BackupManga
{
    ProtobufCMessage base;
    int64_t source;
    char *url;
    char *title;
    char *artist;
    char *author;
    char *description;
    size_t n_genre;
    char **genre;
    int32_t status;
    char *thumbnailurl;
    char *customcover;
    int64_t lastupdate;
    int64_t lastinit;
    int64_t dateadded;
    int32_t viewer;
    int32_t flags;
    size_t n_chapters;
    BackupChapter **chapters;
    size_t n_categories;
    int64_t *categories;
    size_t n_tracking;
    BackupTracking **tracking;
    protobuf_c_boolean favorite;
    int32_t chapterflags;
    size_t n_brokenhistory;
    BrokenBackupHistory **brokenhistory;
    int32_t viewer_flags;
    size_t n_history;
    BackupHistory **history;
    int32_t updatestrategy;
    size_t n_mergedmangareferences;
    BackupMergedMangaReference **mergedmangareferences;
    BackupFlatMetadata *flatmetadata;
    int32_t customstatus;
    char *customtitle;
    char *customartist;
    char *customauthor;
    char *customdescription;
    size_t n_customgenre;
    char **customgenre;
    char *mergedmangaurl;
    char *mergedmangaimageurl;
    char *scanlatorfilter;
};
#define BACKUP_MANGA__INIT                                                     \
    {                                                                          \
        PROTOBUF_C_MESSAGE_INIT(&backup_manga__descriptor)                     \
        , 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, \
            (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string,  \
            (char *)protobuf_c_empty_string, 0, NULL, 0,                       \
            (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string,  \
            0, 0, 0, 0, 0, 0, NULL, 0, NULL, 0, NULL, 0, 0, 0, NULL, 0, 0,     \
            NULL, 0, 0, NULL, NULL, 0, (char *)protobuf_c_empty_string,        \
            (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string,  \
            (char *)protobuf_c_empty_string, 0, NULL,                          \
            (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string,  \
            (char *)protobuf_c_empty_string                                    \
    }

struct BackupChapter
{
    ProtobufCMessage base;
    char *url;
    char *name;
    char *scanlator;
    protobuf_c_boolean read;
    protobuf_c_boolean bookmark;
    int64_t lastpageread;
    int64_t datefetch;
    int64_t dateupload;
    float chapternumber;
    int64_t sourceorder;
    int32_t pagesleft;
};
#define BACKUP_CHAPTER__INIT                                                \
    {                                                                       \
        PROTOBUF_C_MESSAGE_INIT(&backup_chapter__descriptor)                \
        , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, \
            (char *)protobuf_c_empty_string, 0, 0, 0, 0, 0, 0, 0, 0         \
    }

struct BrokenBackupHistory
{
    ProtobufCMessage base;
    char *url;
    int64_t lastread;
    int64_t readduration;
};
#define BROKEN_BACKUP_HISTORY__INIT                                 \
    {                                                               \
        PROTOBUF_C_MESSAGE_INIT(&broken_backup_history__descriptor) \
        , (char *)protobuf_c_empty_string, 0, 0                     \
    }

struct BackupTracking
{
    ProtobufCMessage base;
    int32_t syncid;
    int64_t libraryid;
    int32_t mediaidint;
    char *trackingurl;
    char *title;
    float lastchapterread;
    int32_t totalchapters;
    float score;
    int32_t status;
    int64_t startedreadingdate;
    int64_t finishedreadingdate;
    int64_t mediaid;
};
#define BACKUP_TRACKING__INIT                                    \
    {                                                            \
        PROTOBUF_C_MESSAGE_INIT(&backup_tracking__descriptor)    \
        , 0, 0, 0, (char *)protobuf_c_empty_string,              \
            (char *)protobuf_c_empty_string, 0, 0, 0, 0, 0, 0, 0 \
    }

struct BackupHistory
{
    ProtobufCMessage base;
    char *url;
    int64_t lastread;
    int64_t readduration;
};
#define BACKUP_HISTORY__INIT                                 \
    {                                                        \
        PROTOBUF_C_MESSAGE_INIT(&backup_history__descriptor) \
        , (char *)protobuf_c_empty_string, 0, 0              \
    }

struct BackupMergedMangaReference
{
    ProtobufCMessage base;
};
#define BACKUP_MERGED_MANGA_REFERENCE__INIT                                 \
    {                                                                       \
        PROTOBUF_C_MESSAGE_INIT(&backup_merged_manga_reference__descriptor) \
    }

struct BackupFlatMetadata
{
    ProtobufCMessage base;
};
#define BACKUP_FLAT_METADATA__INIT                                 \
    {                                                              \
        PROTOBUF_C_MESSAGE_INIT(&backup_flat_metadata__descriptor) \
    }

/* BackupManga methods */
void backup_manga__init(BackupManga *message);
size_t backup_manga__get_packed_size(const BackupManga *message);
size_t backup_manga__pack(const BackupManga *message, uint8_t *out);
size_t backup_manga__pack_to_buffer(const BackupManga *message,
                                    ProtobufCBuffer *buffer);
BackupManga *backup_manga__unpack(ProtobufCAllocator *allocator, size_t len,
                                  const uint8_t *data);
void backup_manga__free_unpacked(BackupManga *message,
                                 ProtobufCAllocator *allocator);
/* BackupChapter methods */
void backup_chapter__init(BackupChapter *message);
size_t backup_chapter__get_packed_size(const BackupChapter *message);
size_t backup_chapter__pack(const BackupChapter *message, uint8_t *out);
size_t backup_chapter__pack_to_buffer(const BackupChapter *message,
                                      ProtobufCBuffer *buffer);
BackupChapter *backup_chapter__unpack(ProtobufCAllocator *allocator, size_t len,
                                      const uint8_t *data);
void backup_chapter__free_unpacked(BackupChapter *message,
                                   ProtobufCAllocator *allocator);
/* BrokenBackupHistory methods */
void broken_backup_history__init(BrokenBackupHistory *message);
size_t
broken_backup_history__get_packed_size(const BrokenBackupHistory *message);
size_t broken_backup_history__pack(const BrokenBackupHistory *message,
                                   uint8_t *out);
size_t broken_backup_history__pack_to_buffer(const BrokenBackupHistory *message,
                                             ProtobufCBuffer *buffer);
BrokenBackupHistory *
broken_backup_history__unpack(ProtobufCAllocator *allocator, size_t len,
                              const uint8_t *data);
void broken_backup_history__free_unpacked(BrokenBackupHistory *message,
                                          ProtobufCAllocator *allocator);
/* BackupTracking methods */
void backup_tracking__init(BackupTracking *message);
size_t backup_tracking__get_packed_size(const BackupTracking *message);
size_t backup_tracking__pack(const BackupTracking *message, uint8_t *out);
size_t backup_tracking__pack_to_buffer(const BackupTracking *message,
                                       ProtobufCBuffer *buffer);
BackupTracking *backup_tracking__unpack(ProtobufCAllocator *allocator,
                                        size_t len, const uint8_t *data);
void backup_tracking__free_unpacked(BackupTracking *message,
                                    ProtobufCAllocator *allocator);
/* BackupHistory methods */
void backup_history__init(BackupHistory *message);
size_t backup_history__get_packed_size(const BackupHistory *message);
size_t backup_history__pack(const BackupHistory *message, uint8_t *out);
size_t backup_history__pack_to_buffer(const BackupHistory *message,
                                      ProtobufCBuffer *buffer);
BackupHistory *backup_history__unpack(ProtobufCAllocator *allocator, size_t len,
                                      const uint8_t *data);
void backup_history__free_unpacked(BackupHistory *message,
                                   ProtobufCAllocator *allocator);
/* BackupMergedMangaReference methods */
void backup_merged_manga_reference__init(BackupMergedMangaReference *message);
size_t backup_merged_manga_reference__get_packed_size(
    const BackupMergedMangaReference *message);
size_t
backup_merged_manga_reference__pack(const BackupMergedMangaReference *message,
                                    uint8_t *out);
size_t backup_merged_manga_reference__pack_to_buffer(
    const BackupMergedMangaReference *message, ProtobufCBuffer *buffer);
BackupMergedMangaReference *
backup_merged_manga_reference__unpack(ProtobufCAllocator *allocator, size_t len,
                                      const uint8_t *data);
void backup_merged_manga_reference__free_unpacked(
    BackupMergedMangaReference *message, ProtobufCAllocator *allocator);
/* BackupFlatMetadata methods */
void backup_flat_metadata__init(BackupFlatMetadata *message);
size_t backup_flat_metadata__get_packed_size(const BackupFlatMetadata *message);
size_t backup_flat_metadata__pack(const BackupFlatMetadata *message,
                                  uint8_t *out);
size_t backup_flat_metadata__pack_to_buffer(const BackupFlatMetadata *message,
                                            ProtobufCBuffer *buffer);
BackupFlatMetadata *backup_flat_metadata__unpack(ProtobufCAllocator *allocator,
                                                 size_t len,
                                                 const uint8_t *data);
void backup_flat_metadata__free_unpacked(BackupFlatMetadata *message,
                                         ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*BackupManga_Closure)(const BackupManga *message,
                                    void *closure_data);
typedef void (*BackupChapter_Closure)(const BackupChapter *message,
                                      void *closure_data);
typedef void (*BrokenBackupHistory_Closure)(const BrokenBackupHistory *message,
                                            void *closure_data);
typedef void (*BackupTracking_Closure)(const BackupTracking *message,
                                       void *closure_data);
typedef void (*BackupHistory_Closure)(const BackupHistory *message,
                                      void *closure_data);
typedef void (*BackupMergedMangaReference_Closure)(
    const BackupMergedMangaReference *message, void *closure_data);
typedef void (*BackupFlatMetadata_Closure)(const BackupFlatMetadata *message,
                                           void *closure_data);

/* --- services --- */

/* --- descriptors --- */

extern const ProtobufCEnumDescriptor update_strategy__descriptor;
extern const ProtobufCMessageDescriptor backup_manga__descriptor;
extern const ProtobufCMessageDescriptor backup_chapter__descriptor;
extern const ProtobufCMessageDescriptor broken_backup_history__descriptor;
extern const ProtobufCMessageDescriptor backup_tracking__descriptor;
extern const ProtobufCMessageDescriptor backup_history__descriptor;
extern const ProtobufCMessageDescriptor
    backup_merged_manga_reference__descriptor;
extern const ProtobufCMessageDescriptor backup_flat_metadata__descriptor;

PROTOBUF_C__END_DECLS

#endif /* PROTOBUF_C_tachiyomi_2eproto__INCLUDED */
